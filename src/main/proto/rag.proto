syntax = "proto3";

package rag_service.rag_module;

service RagService {
  rpc ChatHandler (stream ChatRequest) returns (stream ChatResponse);
  rpc WeatherForecast (FcstRequest) returns (FcstResponse);
  rpc ChatSummarize (SummRequest) returns (SummResponse);
  rpc Echo (Message) returns (Message);
};

// rpc : ChatHandler
message APIKey {
  string name = 1;
  string key = 2;
  string version = 3;
  string endpoint = 4;
}

message LLMParameters {
  APIKey key = 1;
  float temperature = 2;
  float top_p = 3;
  float presence_penalty = 4;
  float frequency_penalty = 5;
  int32 max_tokens = 6;
  string prompt_format = 7;
}

message PreInfo {
  enum Type {
    PERSONAL = 0; // 개인정보
    SKIN_DIAGNOSIS = 1; // 피부 진단 정보
    DNA_DIAGNOSIS = 2; // 유전자 진단 정보
    INTERVIEW = 3; // 대면 상담내역
    WEATHER = 4;
  }
  Type type = 1;
  string data = 2;
}

message Chat {
  string input = 1;
  string output = 2;
}

// rpc : ChatHandler -> Config
// must send llm config information before chat
message Config{
  int64 room_id = 1; // in order to load redis chat memory
  LLMParameters base_params = 2;
  LLMParameters rqa_params = 3;
  APIKey embedding_key = 4;
  int32 retrieval_top_k = 5;

  repeated PreInfo pre_info = 6;
  enum MemoryType {
    BUFFER_MEMORY = 0;
    WINDOW_MEMORY = 1;
  }
  optional MemoryType memory_type = 7;
  optional int32 memory_window = 8;
  repeated Chat chat_history = 9;
}


// rpc : ChatHandler -> ClientMessage
// client message must contain relevant documents
message ChatRequest {
  oneof msg_type {
    Config config = 1;
    string msg = 2;
  }
  optional int64 sequence = 3;
}

message Status {
  enum Code {
    NULL = 0;
    CFG_RECEIVED = 10;
    AGENT_INIT = 11;
    MEMORY_LOAD = 12;

    MSG_RECEIVED = 20;

    STREAM_START = 30;
    STREAM_END = 31;
    MEMORY_SAVE = 32;

    ERROR = 500;
    BAD_PROMPT = 501;
  }
  Code code = 1;
  optional string info = 2;
}

message ChatResponse {
  oneof msg_type {
    string msg = 1;
    Status status = 2;
  }
}


message FcstRequest {
  float longitude = 1;
  float latitude = 2;
  string target_date = 3;
  string target_time = 4;
}

message FcstResponse {
  string time = 1;
  string area = 2;
  repeated FcstInfo info = 3;

  message FcstInfo {
    string field = 1;
    string value = 2;
  }
}

message SummRequest {
  LLMParameters llm_params = 1;
  repeated Chat chat_history = 2;
}

message SummResponse {
  string response = 1;
}

message Message { // used for debugging
  string msg = 1;
}
